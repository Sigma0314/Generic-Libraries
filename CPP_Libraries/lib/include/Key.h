#ifndef LIB_KEY_H
#define LIB_KEY_H

#include <Windows.h> // VK constants, GetAsyncKeyState

#include "EnvVar.h"

LIB_BEGIN

enum class VirtualKey : int {
	LeftMouseButton = VK_LBUTTON,
	RightMouseButton = VK_RBUTTON,
	UNDEFINED_CANCEL = VK_CANCEL, // MSDN annotation: "Control-break processing"
	MiddleMouseButton = VK_MBUTTON,
	LowerMouseSideButton = VK_XBUTTON1,
	UpperMouseSideButton = VK_XBUTTON2,
	Backspace = VK_BACK,
	Tab = VK_TAB,
	Clear = VK_CLEAR,
	Enter = VK_RETURN,
	Shift = VK_SHIFT,
	Control = VK_CONTROL,
	ALT = VK_MENU,
	Pause = VK_PAUSE,
	CapsLock = VK_CAPITAL,
	Escape = VK_ESCAPE,
	Space = VK_SPACE,
	PageUp = VK_PRIOR,
	PageDown = VK_NEXT,
	End = VK_END,
	Home = VK_HOME,
	LeftArrow = VK_LEFT,
	UpArrow = VK_UP,
	RightArrow = VK_RIGHT,
	DownArrow = VK_DOWN,
	UNDEFINED_SELECT = VK_SELECT,
	UNDEFINED_PRINT = VK_PRINT,
	UNDEFINED_EXECUTE = VK_EXECUTE,
	PrintScreen = VK_SNAPSHOT,
	Insert = VK_INSERT,
	Delete = VK_DELETE,
	Help = VK_HELP,
	Zero = '0',
	One = '1',
	Two = '2',
	Three = '3',
	Four = '4',
	Five = '5',
	Six = '6',
	Seven = '7',
	Eight = '8',
	Nine = '9',
	A = 'A',
	B = 'B',
	C = 'C',
	D = 'D',
	E = 'E',
	F = 'F',
	G = 'G',
	H = 'H',
	I = 'I',
	J = 'J',
	K = 'K',
	L = 'L',
	M = 'M',
	N = 'N',
	O = 'O',
	P = 'P',
	Q = 'Q',
	R = 'R',
	S = 'S',
	T = 'T',
	U = 'U',
	V = 'V',
	W = 'W',
	X = 'X',
	Y = 'Y',
	Z = 'Z',
	LeftWindows = VK_LWIN,
	RightWindows = VK_RWIN,
	Applications = VK_APPS,
	Sleep = VK_SLEEP,
	Numpad0 = VK_NUMPAD0,
	Numpad1 = VK_NUMPAD1,
	Numpad2 = VK_NUMPAD2,
	Numpad3 = VK_NUMPAD3,
	Numpad4 = VK_NUMPAD4,
	Numpad5 = VK_NUMPAD5,
	Numpad6 = VK_NUMPAD6,
	Numpad7 = VK_NUMPAD7,
	Numpad8 = VK_NUMPAD8,
	Numpad9 = VK_NUMPAD9,
	Multiply = VK_MULTIPLY,
	Add = VK_ADD,
	Separator = VK_SEPARATOR,
	Subtract = VK_SUBTRACT,
	Decimal = VK_DECIMAL,
	Divide = VK_DIVIDE,
	F1 = VK_F1,
	F2 = VK_F2,
	F3 = VK_F3,
	F4 = VK_F4,
	F5 = VK_F5,
	F6 = VK_F6,
	F7 = VK_F7,
	F8 = VK_F8,
	F9 = VK_F9,
	F10 = VK_F10,
	F11	= VK_F11,
	F12	= VK_F12,
	F13 = VK_F13,
	F14 = VK_F14,
	F15 = VK_F15,
	F16 = VK_F16,
	F17 = VK_F17,
	F18 = VK_F18,
	F19 = VK_F19,
	F20 = VK_F20,
	F21 = VK_F21,
	F22 = VK_F22,
	F23 = VK_F23,
	F24 = VK_F24,
	NumLock = VK_NUMLOCK,
	ScrollLock = VK_SCROLL,
	LeftShift = VK_LSHIFT,
	RightShift = VK_RSHIFT,
	LeftControl = VK_LCONTROL,
	RightControl = VK_RCONTROL,
	LeftAlt = VK_LMENU,
	RightAlt = VK_RMENU
};

inline bool IsKeyPressed(VirtualKey vk) { return (GetAsyncKeyState((int)vk) & 1); }

LIB_END

#endif